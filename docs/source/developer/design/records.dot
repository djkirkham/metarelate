digraph records {

## basic setup 

   	rankdir = LR;
        node [
        fontsize = 32,
        shape = Mrecord
        ];

        edge [
        fontsize = 24
        ];

## class definitions


   	component [
	label = "<title> mr:Component ID(sha-1) |<type> rdf:type |<req> dc:requires *|<med> dc:mediator 0..1|<props> statements 1..*"
	];

        mediator [
	label = "<title> mr:Mediator label |<type> rdf:type|<label> rdf:label  "
	];

	valuemap [
	label = "<title> mr:ValueMap ID(sha-1) |<source> mr:source |<target> mr:target" 
	];

	getattr [
	label = "<title> mr:ScopedProperty | <scope> mr:scope |<val> mr:identifier"
	];

	literal [
	label = "<title> literal"
	];

	value [
	label = "<title> mr:Value ID(sha-1) |<o> mr:operator |<sub> mr:subject |<ob> mr:object"
	];

	mapping [
	label = "<title> mr:Mapping ID(sha-1) |<source> mr:source 0..1|<target> mr:target 0..1|mr:invertible 1| dc:replaces 0..1 |<valmap> mr:hasValueMap *|skos:note 0..1|dc:date 1|<c> dc:creator 1|<o> dc:rightsHolder *|<w> dc:contributor *|<dataAcc> dc:dateAccepted 0..1"
	];


	contact [
	label = "<title> skos:Concept contact | skos:inScheme| skos:prefLabel |skos:definition |dc:date"
	];


## relations


	mapping:source -> component:title

	mapping:target -> component:title

	component:props -> component:title

	component:med -> mediator:title
	component:req -> mediator:title

	mapping:valmap -> valuemap:title

	valuemap:source -> value:title
	valuemap:target -> value:title

	getattr:scope -> component:title

	mapping:c -> contact
	mapping:o -> contact
	mapping:w -> contact

	value:sub -> value:title
	value:ob -> value:title

	value:sub -> getattr:title
	value:ob -> getattr:title

	value:sub -> literal:title
	value:ob -> literal:title


}